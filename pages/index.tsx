import Head from 'next/head'
import React from 'react'

import { Inter } from '@next/font/google'
import '../styles/Home.module.css'
import Introduction from '../components/Introduction'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import {
	faMoon,
	faHome,
	faUser,
	faEnvelopeOpen,
	faPen,
	faLightbulb,
} from '@fortawesome/free-solid-svg-icons'
import About from '../components/About'
import Skills from '../components/Skills'
import Contact from '../components/Contact'
import { CustomIntersectionObserver } from '../utils/IntersectionObserver'
import Link from 'next/link'

const inter = Inter({ subsets: ['latin'] })

interface HomeProps {}

interface HomeState {
	title: string
	activeSlideIndex: number
	currentTheme: string
}

class Home extends React.Component<HomeProps, HomeState> {
	state = {
		title: 'Abhay Singh',
		activeSlideIndex: 0,
		currentTheme: 'dark',
	}

	setActiveSlideIndex(index: number) {
		this.setState({
			...this.state,
			activeSlideIndex: index,
		})
	}

	setTheme(theme: string) {
		const html = document.querySelector('html')
		localStorage.setItem('theme', theme)
		html?.setAttribute('data-theme', theme)
		this.setState({
			...this.state,
			currentTheme: theme,
		})
	}

	links = [
		{
			icon: faHome,
			slideIndex: 0,
			onSMScreen: true,
			onLGScreen: true,
			title: 'Home',
		},
		{
			icon: faUser,
			slideIndex: 1,
			onSMScreen: true,
			onLGScreen: true,
			title: 'About',
		},
		{
			icon: faPen,
			slideIndex: 2,
			onSMScreen: true,
			onLGScreen: true,
			title: 'Skills',
		},
		{
			icon: faEnvelopeOpen,
			slideIndex: 3,
			onSMScreen: true,
			onLGScreen: true,
			title: 'Connect',
		},
	]

	observer?: IntersectionObserver

	componentDidMount(): void {
		const storageTheme = localStorage.getItem('theme')
		if (storageTheme?.length) {
			this.setTheme(storageTheme)
		} else {
			this.setTheme(this.state.currentTheme)
		}

		// intersection observer
		this.observer = CustomIntersectionObserver()

		document
			?.querySelectorAll('.left-animation')
			.forEach((element: Element) => {
				this.observer?.observe(element)
			})
		document
			?.querySelectorAll('.right-animation')
			.forEach((element: Element) => {
				this.observer?.observe(element)
			})
		document?.querySelectorAll('.top-animation').forEach((element: Element) => {
			this.observer?.observe(element)
		})
		document
			?.querySelectorAll('.bottom-animation')
			.forEach((element: Element) => {
				this.observer?.observe(element)
			})
		document
			?.querySelectorAll('.zoom-in-animation')
			.forEach((element: Element) => {
				this.observer?.observe(element)
			})
		document
			?.querySelectorAll('.zoom-out-animation')
			.forEach((element: Element) => {
				this.observer?.observe(element)
			})
	}

	componentWillUnmount(): void {
		this.observer?.disconnect()
	}

	render() {
		return (
			<>
				<Head>
					<title>{this.state.title}</title>
					<meta name="description" content="Generated by create next app" />
					<meta name="viewport" content="width=device-width, initial-scale=1" />
					<link rel="icon" href="/favicon.ico" />
				</Head>
				<main className="overflow-hidden overflow-y-auto max-h-screen bg-base-100">
					<div className="accent-pyramid border-primary left-animation"></div>
					<div className="accent-pyramid-opposite border-primary right-animation"></div>
					<div className="absolute right-0 mt-3 mr-6 z-50">
						<span
							onClick={() => {
								this.setTheme(
									this.state.currentTheme === 'dark' ? 'light' : 'dark',
								)
							}}
							className="btn flex w-12 h-12 rounded-full items-center justify-center"
						>
							<FontAwesomeIcon
								icon={this.state.currentTheme === 'dark' ? faLightbulb : faMoon}
								className="w-6 h-6 cursor-pointer"
							/>{' '}
							<span className="hidden">toggle theme</span>
						</span>
					</div>
					<nav className="fixed z-40 right-0 hidden lg:flex min-h-screen items-center p-3">
						<ul className="menu gap-4 p-2 rounded-box h-1/2 ">
							{this.links.map((obj, index) =>
								obj.onLGScreen ? (
									<li
										key={index}
										className="group flex items-end text-primary-content"
									>
										<Link
											className={
												'btn group-hover:bg-primary-focus transition-all duration-300' +
												' ' +
												(this.state.activeSlideIndex === obj.slideIndex
													? 'bg-primary'
													: '')
											}
											onClick={() => {
												this.setActiveSlideIndex(obj.slideIndex)
											}}
											href={'/#page' + obj.slideIndex}
										>
											<span className="uppercase tracking-wider hidden group-hover:flex ">
												{obj.title}{' '}
											</span>{' '}
											<FontAwesomeIcon icon={obj.icon} className="w-4 h-4" />
										</Link>
									</li>
								) : (
									<></>
								),
							)}
						</ul>
					</nav>
					<section className="mx-auto">
						<div className="mb-16" id="page0">
							<Introduction />
						</div>
						<div className="lg:w-10/12 mx-auto mb-16" id="page1">
							<About />
						</div>
						<div className="lg:w-10/12 mx-auto mb-16" id="page2">
							<Skills />
						</div>
						<div className="lg:w-10/12 mx-auto mb-16" id="page3">
							<Contact />
						</div>
					</section>
				</main>
			</>
		)
	}
}

export default Home
